//*
// Single Use Coupon Protocol is suit for cases where the user requires a clean and simple single use coupon for short term coupon campaigns in Apple Wallet and Google Pay.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: io/single_use_coupons/a_rpc.proto

package single_use_coupons

import (
	context "context"

	io "github.com/PassKit/passkit-golang-grpc-sdk/io"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SingleUseCoupons_CreateCouponCampaign_FullMethodName                   = "/single_use_coupons.SingleUseCoupons/createCouponCampaign"
	SingleUseCoupons_UpdateCouponCampaign_FullMethodName                   = "/single_use_coupons.SingleUseCoupons/updateCouponCampaign"
	SingleUseCoupons_GetCouponCampaign_FullMethodName                      = "/single_use_coupons.SingleUseCoupons/getCouponCampaign"
	SingleUseCoupons_DeleteCouponCampaign_FullMethodName                   = "/single_use_coupons.SingleUseCoupons/deleteCouponCampaign"
	SingleUseCoupons_ListCouponCampaignsDeprecated_FullMethodName          = "/single_use_coupons.SingleUseCoupons/listCouponCampaignsDeprecated"
	SingleUseCoupons_ListCouponCampaigns_FullMethodName                    = "/single_use_coupons.SingleUseCoupons/listCouponCampaigns"
	SingleUseCoupons_GetAnalytics_FullMethodName                           = "/single_use_coupons.SingleUseCoupons/getAnalytics"
	SingleUseCoupons_CreateCouponOffer_FullMethodName                      = "/single_use_coupons.SingleUseCoupons/createCouponOffer"
	SingleUseCoupons_UpdateCouponOffer_FullMethodName                      = "/single_use_coupons.SingleUseCoupons/updateCouponOffer"
	SingleUseCoupons_GetCouponOffer_FullMethodName                         = "/single_use_coupons.SingleUseCoupons/getCouponOffer"
	SingleUseCoupons_DeleteCouponOffer_FullMethodName                      = "/single_use_coupons.SingleUseCoupons/deleteCouponOffer"
	SingleUseCoupons_ListCouponOffersDeprecated_FullMethodName             = "/single_use_coupons.SingleUseCoupons/listCouponOffersDeprecated"
	SingleUseCoupons_ListCouponOffers_FullMethodName                       = "/single_use_coupons.SingleUseCoupons/listCouponOffers"
	SingleUseCoupons_CreateCoupon_FullMethodName                           = "/single_use_coupons.SingleUseCoupons/createCoupon"
	SingleUseCoupons_UpdateCoupon_FullMethodName                           = "/single_use_coupons.SingleUseCoupons/updateCoupon"
	SingleUseCoupons_StreamCouponUpdates_FullMethodName                    = "/single_use_coupons.SingleUseCoupons/streamCouponUpdates"
	SingleUseCoupons_RedeemCoupon_FullMethodName                           = "/single_use_coupons.SingleUseCoupons/redeemCoupon"
	SingleUseCoupons_UpdateCouponExternalId_FullMethodName                 = "/single_use_coupons.SingleUseCoupons/updateCouponExternalId"
	SingleUseCoupons_StreamCouponRedemptions_FullMethodName                = "/single_use_coupons.SingleUseCoupons/streamCouponRedemptions"
	SingleUseCoupons_GetCouponById_FullMethodName                          = "/single_use_coupons.SingleUseCoupons/getCouponById"
	SingleUseCoupons_GetCouponByExternalId_FullMethodName                  = "/single_use_coupons.SingleUseCoupons/getCouponByExternalId"
	SingleUseCoupons_VoidCoupon_FullMethodName                             = "/single_use_coupons.SingleUseCoupons/voidCoupon"
	SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_FullMethodName  = "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaignDeprecated"
	SingleUseCoupons_ListCouponsByCouponCampaign_FullMethodName            = "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaign"
	SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_FullMethodName = "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaignDeprecated"
	SingleUseCoupons_CountCouponsByCouponCampaign_FullMethodName           = "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaign"
	SingleUseCoupons_PatchPerson_FullMethodName                            = "/single_use_coupons.SingleUseCoupons/patchPerson"
	SingleUseCoupons_CopyCouponCampaign_FullMethodName                     = "/single_use_coupons.SingleUseCoupons/copyCouponCampaign"
	SingleUseCoupons_GetMetaKeysForCampaign_FullMethodName                 = "/single_use_coupons.SingleUseCoupons/getMetaKeysForCampaign"
)

// SingleUseCouponsClient is the client API for SingleUseCoupons service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SingleUseCouponsClient interface {
	CreateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*CouponCampaign, error)
	GetCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponCampaign, error)
	DeleteCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListCouponCampaignsDeprecated(ctx context.Context, in *io.Pagination, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsDeprecatedClient, error)
	ListCouponCampaigns(ctx context.Context, in *io.Filters, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsClient, error)
	GetAnalytics(ctx context.Context, in *io.AnalyticsRequest, opts ...grpc.CallOption) (*CouponCampaignAnalyticsResponse, error)
	CreateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*CouponOffer, error)
	GetCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponOffer, error)
	DeleteCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListCouponOffersDeprecated(ctx context.Context, in *CouponOffersListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersDeprecatedClient, error)
	ListCouponOffers(ctx context.Context, in *CouponOffersListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersClient, error)
	CreateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	StreamCouponUpdates(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponUpdatesClient, error)
	RedeemCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCouponExternalId(ctx context.Context, in *CouponNewExternalIdRequest, opts ...grpc.CallOption) (*io.Id, error)
	StreamCouponRedemptions(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponRedemptionsClient, error)
	GetCouponById(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*Coupon, error)
	GetCouponByExternalId(ctx context.Context, in *ExternalIdRequest, opts ...grpc.CallOption) (*Coupon, error)
	VoidCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient, error)
	ListCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignClient, error)
	CountCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (*io.Count, error)
	CountCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*io.Count, error)
	PatchPerson(ctx context.Context, in *io.PersonRequest, opts ...grpc.CallOption) (*io.Id, error)
	CopyCouponCampaign(ctx context.Context, in *CampaignCopyRequest, opts ...grpc.CallOption) (*io.Id, error)
	GetMetaKeysForCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*io.Strings, error)
}

type singleUseCouponsClient struct {
	cc grpc.ClientConnInterface
}

func NewSingleUseCouponsClient(cc grpc.ClientConnInterface) SingleUseCouponsClient {
	return &singleUseCouponsClient{cc}
}

func (c *singleUseCouponsClient) CreateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CreateCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*CouponCampaign, error) {
	out := new(CouponCampaign)
	err := c.cc.Invoke(ctx, SingleUseCoupons_UpdateCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponCampaign, error) {
	out := new(CouponCampaign)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) DeleteCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SingleUseCoupons_DeleteCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponCampaignsDeprecated(ctx context.Context, in *io.Pagination, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[0], SingleUseCoupons_ListCouponCampaignsDeprecated_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponCampaignsDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponCampaignsDeprecatedClient interface {
	Recv() (*CouponCampaign, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponCampaignsDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponCampaignsDeprecatedClient) Recv() (*CouponCampaign, error) {
	m := new(CouponCampaign)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponCampaigns(ctx context.Context, in *io.Filters, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[1], SingleUseCoupons_ListCouponCampaigns_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponCampaignsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponCampaignsClient interface {
	Recv() (*CouponCampaign, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponCampaignsClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponCampaignsClient) Recv() (*CouponCampaign, error) {
	m := new(CouponCampaign)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) GetAnalytics(ctx context.Context, in *io.AnalyticsRequest, opts ...grpc.CallOption) (*CouponCampaignAnalyticsResponse, error) {
	out := new(CouponCampaignAnalyticsResponse)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetAnalytics_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CreateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CreateCouponOffer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*CouponOffer, error) {
	out := new(CouponOffer)
	err := c.cc.Invoke(ctx, SingleUseCoupons_UpdateCouponOffer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponOffer, error) {
	out := new(CouponOffer)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetCouponOffer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) DeleteCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SingleUseCoupons_DeleteCouponOffer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponOffersDeprecated(ctx context.Context, in *CouponOffersListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[2], SingleUseCoupons_ListCouponOffersDeprecated_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponOffersDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponOffersDeprecatedClient interface {
	Recv() (*CouponOffer, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponOffersDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponOffersDeprecatedClient) Recv() (*CouponOffer, error) {
	m := new(CouponOffer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponOffers(ctx context.Context, in *CouponOffersListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[3], SingleUseCoupons_ListCouponOffers_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponOffersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponOffersClient interface {
	Recv() (*CouponOffer, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponOffersClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponOffersClient) Recv() (*CouponOffer, error) {
	m := new(CouponOffer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) CreateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CreateCoupon_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_UpdateCoupon_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) StreamCouponUpdates(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[4], SingleUseCoupons_StreamCouponUpdates_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsStreamCouponUpdatesClient{stream}
	return x, nil
}

type SingleUseCoupons_StreamCouponUpdatesClient interface {
	Send(*Coupon) error
	Recv() (*io.Id, error)
	grpc.ClientStream
}

type singleUseCouponsStreamCouponUpdatesClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsStreamCouponUpdatesClient) Send(m *Coupon) error {
	return x.ClientStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponUpdatesClient) Recv() (*io.Id, error) {
	m := new(io.Id)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) RedeemCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_RedeemCoupon_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCouponExternalId(ctx context.Context, in *CouponNewExternalIdRequest, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_UpdateCouponExternalId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) StreamCouponRedemptions(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponRedemptionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[5], SingleUseCoupons_StreamCouponRedemptions_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsStreamCouponRedemptionsClient{stream}
	return x, nil
}

type SingleUseCoupons_StreamCouponRedemptionsClient interface {
	Send(*Coupon) error
	Recv() (*io.Id, error)
	grpc.ClientStream
}

type singleUseCouponsStreamCouponRedemptionsClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsStreamCouponRedemptionsClient) Send(m *Coupon) error {
	return x.ClientStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponRedemptionsClient) Recv() (*io.Id, error) {
	m := new(io.Id)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) GetCouponById(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*Coupon, error) {
	out := new(Coupon)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetCouponById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponByExternalId(ctx context.Context, in *ExternalIdRequest, opts ...grpc.CallOption) (*Coupon, error) {
	out := new(Coupon)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetCouponByExternalId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) VoidCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SingleUseCoupons_VoidCoupon_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[6], SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponsByCouponCampaignDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient interface {
	Recv() (*Coupon, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponsByCouponCampaignDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignDeprecatedClient) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignClient, error) {
	stream, err := c.cc.NewStream(ctx, &SingleUseCoupons_ServiceDesc.Streams[7], SingleUseCoupons_ListCouponsByCouponCampaign_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponsByCouponCampaignClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponsByCouponCampaignClient interface {
	Recv() (*Coupon, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponsByCouponCampaignClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignClient) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) CountCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (*io.Count, error) {
	out := new(io.Count)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CountCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*io.Count, error) {
	out := new(io.Count)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CountCouponsByCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) PatchPerson(ctx context.Context, in *io.PersonRequest, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_PatchPerson_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CopyCouponCampaign(ctx context.Context, in *CampaignCopyRequest, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, SingleUseCoupons_CopyCouponCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetMetaKeysForCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*io.Strings, error) {
	out := new(io.Strings)
	err := c.cc.Invoke(ctx, SingleUseCoupons_GetMetaKeysForCampaign_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SingleUseCouponsServer is the server API for SingleUseCoupons service.
// All implementations should embed UnimplementedSingleUseCouponsServer
// for forward compatibility
type SingleUseCouponsServer interface {
	CreateCouponCampaign(context.Context, *CouponCampaign) (*io.Id, error)
	UpdateCouponCampaign(context.Context, *CouponCampaign) (*CouponCampaign, error)
	GetCouponCampaign(context.Context, *io.Id) (*CouponCampaign, error)
	DeleteCouponCampaign(context.Context, *io.Id) (*emptypb.Empty, error)
	ListCouponCampaignsDeprecated(*io.Pagination, SingleUseCoupons_ListCouponCampaignsDeprecatedServer) error
	ListCouponCampaigns(*io.Filters, SingleUseCoupons_ListCouponCampaignsServer) error
	GetAnalytics(context.Context, *io.AnalyticsRequest) (*CouponCampaignAnalyticsResponse, error)
	CreateCouponOffer(context.Context, *CouponOffer) (*io.Id, error)
	UpdateCouponOffer(context.Context, *CouponOffer) (*CouponOffer, error)
	GetCouponOffer(context.Context, *io.Id) (*CouponOffer, error)
	DeleteCouponOffer(context.Context, *io.Id) (*emptypb.Empty, error)
	ListCouponOffersDeprecated(*CouponOffersListRequestDeprecated, SingleUseCoupons_ListCouponOffersDeprecatedServer) error
	ListCouponOffers(*CouponOffersListRequest, SingleUseCoupons_ListCouponOffersServer) error
	CreateCoupon(context.Context, *Coupon) (*io.Id, error)
	UpdateCoupon(context.Context, *Coupon) (*io.Id, error)
	StreamCouponUpdates(SingleUseCoupons_StreamCouponUpdatesServer) error
	RedeemCoupon(context.Context, *Coupon) (*io.Id, error)
	UpdateCouponExternalId(context.Context, *CouponNewExternalIdRequest) (*io.Id, error)
	StreamCouponRedemptions(SingleUseCoupons_StreamCouponRedemptionsServer) error
	GetCouponById(context.Context, *io.Id) (*Coupon, error)
	GetCouponByExternalId(context.Context, *ExternalIdRequest) (*Coupon, error)
	VoidCoupon(context.Context, *Coupon) (*emptypb.Empty, error)
	ListCouponsByCouponCampaignDeprecated(*ListRequestDeprecated, SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer) error
	ListCouponsByCouponCampaign(*ListRequest, SingleUseCoupons_ListCouponsByCouponCampaignServer) error
	CountCouponsByCouponCampaignDeprecated(context.Context, *ListRequestDeprecated) (*io.Count, error)
	CountCouponsByCouponCampaign(context.Context, *ListRequest) (*io.Count, error)
	PatchPerson(context.Context, *io.PersonRequest) (*io.Id, error)
	CopyCouponCampaign(context.Context, *CampaignCopyRequest) (*io.Id, error)
	GetMetaKeysForCampaign(context.Context, *io.Id) (*io.Strings, error)
}

// UnimplementedSingleUseCouponsServer should be embedded to have forward compatible implementations.
type UnimplementedSingleUseCouponsServer struct {
}

func (UnimplementedSingleUseCouponsServer) CreateCouponCampaign(context.Context, *CouponCampaign) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) UpdateCouponCampaign(context.Context, *CouponCampaign) (*CouponCampaign, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetCouponCampaign(context.Context, *io.Id) (*CouponCampaign, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) DeleteCouponCampaign(context.Context, *io.Id) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponCampaignsDeprecated(*io.Pagination, SingleUseCoupons_ListCouponCampaignsDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponCampaignsDeprecated not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponCampaigns(*io.Filters, SingleUseCoupons_ListCouponCampaignsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponCampaigns not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetAnalytics(context.Context, *io.AnalyticsRequest) (*CouponCampaignAnalyticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnalytics not implemented")
}
func (UnimplementedSingleUseCouponsServer) CreateCouponOffer(context.Context, *CouponOffer) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponOffer not implemented")
}
func (UnimplementedSingleUseCouponsServer) UpdateCouponOffer(context.Context, *CouponOffer) (*CouponOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponOffer not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetCouponOffer(context.Context, *io.Id) (*CouponOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponOffer not implemented")
}
func (UnimplementedSingleUseCouponsServer) DeleteCouponOffer(context.Context, *io.Id) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCouponOffer not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponOffersDeprecated(*CouponOffersListRequestDeprecated, SingleUseCoupons_ListCouponOffersDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponOffersDeprecated not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponOffers(*CouponOffersListRequest, SingleUseCoupons_ListCouponOffersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponOffers not implemented")
}
func (UnimplementedSingleUseCouponsServer) CreateCoupon(context.Context, *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCoupon not implemented")
}
func (UnimplementedSingleUseCouponsServer) UpdateCoupon(context.Context, *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCoupon not implemented")
}
func (UnimplementedSingleUseCouponsServer) StreamCouponUpdates(SingleUseCoupons_StreamCouponUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamCouponUpdates not implemented")
}
func (UnimplementedSingleUseCouponsServer) RedeemCoupon(context.Context, *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemCoupon not implemented")
}
func (UnimplementedSingleUseCouponsServer) UpdateCouponExternalId(context.Context, *CouponNewExternalIdRequest) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponExternalId not implemented")
}
func (UnimplementedSingleUseCouponsServer) StreamCouponRedemptions(SingleUseCoupons_StreamCouponRedemptionsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamCouponRedemptions not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetCouponById(context.Context, *io.Id) (*Coupon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponById not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetCouponByExternalId(context.Context, *ExternalIdRequest) (*Coupon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponByExternalId not implemented")
}
func (UnimplementedSingleUseCouponsServer) VoidCoupon(context.Context, *Coupon) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoidCoupon not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponsByCouponCampaignDeprecated(*ListRequestDeprecated, SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponsByCouponCampaignDeprecated not implemented")
}
func (UnimplementedSingleUseCouponsServer) ListCouponsByCouponCampaign(*ListRequest, SingleUseCoupons_ListCouponsByCouponCampaignServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponsByCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) CountCouponsByCouponCampaignDeprecated(context.Context, *ListRequestDeprecated) (*io.Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountCouponsByCouponCampaignDeprecated not implemented")
}
func (UnimplementedSingleUseCouponsServer) CountCouponsByCouponCampaign(context.Context, *ListRequest) (*io.Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountCouponsByCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) PatchPerson(context.Context, *io.PersonRequest) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchPerson not implemented")
}
func (UnimplementedSingleUseCouponsServer) CopyCouponCampaign(context.Context, *CampaignCopyRequest) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyCouponCampaign not implemented")
}
func (UnimplementedSingleUseCouponsServer) GetMetaKeysForCampaign(context.Context, *io.Id) (*io.Strings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetaKeysForCampaign not implemented")
}

// UnsafeSingleUseCouponsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SingleUseCouponsServer will
// result in compilation errors.
type UnsafeSingleUseCouponsServer interface {
	mustEmbedUnimplementedSingleUseCouponsServer()
}

func RegisterSingleUseCouponsServer(s grpc.ServiceRegistrar, srv SingleUseCouponsServer) {
	s.RegisterService(&SingleUseCoupons_ServiceDesc, srv)
}

func _SingleUseCoupons_CreateCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CreateCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCouponCampaign(ctx, req.(*CouponCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_UpdateCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCouponCampaign(ctx, req.(*CouponCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponCampaign(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_DeleteCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).DeleteCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_DeleteCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).DeleteCouponCampaign(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponCampaignsDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(io.Pagination)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponCampaignsDeprecated(m, &singleUseCouponsListCouponCampaignsDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponCampaignsDeprecatedServer interface {
	Send(*CouponCampaign) error
	grpc.ServerStream
}

type singleUseCouponsListCouponCampaignsDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponCampaignsDeprecatedServer) Send(m *CouponCampaign) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponCampaigns_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(io.Filters)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponCampaigns(m, &singleUseCouponsListCouponCampaignsServer{stream})
}

type SingleUseCoupons_ListCouponCampaignsServer interface {
	Send(*CouponCampaign) error
	grpc.ServerStream
}

type singleUseCouponsListCouponCampaignsServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponCampaignsServer) Send(m *CouponCampaign) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_GetAnalytics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.AnalyticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetAnalytics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetAnalytics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetAnalytics(ctx, req.(*io.AnalyticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CreateCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CreateCouponOffer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCouponOffer(ctx, req.(*CouponOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_UpdateCouponOffer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCouponOffer(ctx, req.(*CouponOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetCouponOffer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponOffer(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_DeleteCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).DeleteCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_DeleteCouponOffer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).DeleteCouponOffer(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponOffersDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CouponOffersListRequestDeprecated)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponOffersDeprecated(m, &singleUseCouponsListCouponOffersDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponOffersDeprecatedServer interface {
	Send(*CouponOffer) error
	grpc.ServerStream
}

type singleUseCouponsListCouponOffersDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponOffersDeprecatedServer) Send(m *CouponOffer) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponOffers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CouponOffersListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponOffers(m, &singleUseCouponsListCouponOffersServer{stream})
}

type SingleUseCoupons_ListCouponOffersServer interface {
	Send(*CouponOffer) error
	grpc.ServerStream
}

type singleUseCouponsListCouponOffersServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponOffersServer) Send(m *CouponOffer) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_CreateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CreateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_UpdateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_StreamCouponUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SingleUseCouponsServer).StreamCouponUpdates(&singleUseCouponsStreamCouponUpdatesServer{stream})
}

type SingleUseCoupons_StreamCouponUpdatesServer interface {
	Send(*io.Id) error
	Recv() (*Coupon, error)
	grpc.ServerStream
}

type singleUseCouponsStreamCouponUpdatesServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsStreamCouponUpdatesServer) Send(m *io.Id) error {
	return x.ServerStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponUpdatesServer) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SingleUseCoupons_RedeemCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).RedeemCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_RedeemCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).RedeemCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCouponExternalId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponNewExternalIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCouponExternalId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_UpdateCouponExternalId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCouponExternalId(ctx, req.(*CouponNewExternalIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_StreamCouponRedemptions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SingleUseCouponsServer).StreamCouponRedemptions(&singleUseCouponsStreamCouponRedemptionsServer{stream})
}

type SingleUseCoupons_StreamCouponRedemptionsServer interface {
	Send(*io.Id) error
	Recv() (*Coupon, error)
	grpc.ServerStream
}

type singleUseCouponsStreamCouponRedemptionsServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsStreamCouponRedemptionsServer) Send(m *io.Id) error {
	return x.ServerStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponRedemptionsServer) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SingleUseCoupons_GetCouponById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetCouponById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponById(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponByExternalId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExternalIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponByExternalId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetCouponByExternalId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponByExternalId(ctx, req.(*ExternalIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_VoidCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).VoidCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_VoidCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).VoidCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequestDeprecated)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponsByCouponCampaignDeprecated(m, &singleUseCouponsListCouponsByCouponCampaignDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer interface {
	Send(*Coupon) error
	grpc.ServerStream
}

type singleUseCouponsListCouponsByCouponCampaignDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignDeprecatedServer) Send(m *Coupon) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponsByCouponCampaign_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponsByCouponCampaign(m, &singleUseCouponsListCouponsByCouponCampaignServer{stream})
}

type SingleUseCoupons_ListCouponsByCouponCampaignServer interface {
	Send(*Coupon) error
	grpc.ServerStream
}

type singleUseCouponsListCouponsByCouponCampaignServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignServer) Send(m *Coupon) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequestDeprecated)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaignDeprecated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaignDeprecated(ctx, req.(*ListRequestDeprecated))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CountCouponsByCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CountCouponsByCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaign(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_PatchPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).PatchPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_PatchPerson_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).PatchPerson(ctx, req.(*io.PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CopyCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampaignCopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CopyCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_CopyCouponCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CopyCouponCampaign(ctx, req.(*CampaignCopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetMetaKeysForCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetMetaKeysForCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SingleUseCoupons_GetMetaKeysForCampaign_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetMetaKeysForCampaign(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

// SingleUseCoupons_ServiceDesc is the grpc.ServiceDesc for SingleUseCoupons service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SingleUseCoupons_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "single_use_coupons.SingleUseCoupons",
	HandlerType: (*SingleUseCouponsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createCouponCampaign",
			Handler:    _SingleUseCoupons_CreateCouponCampaign_Handler,
		},
		{
			MethodName: "updateCouponCampaign",
			Handler:    _SingleUseCoupons_UpdateCouponCampaign_Handler,
		},
		{
			MethodName: "getCouponCampaign",
			Handler:    _SingleUseCoupons_GetCouponCampaign_Handler,
		},
		{
			MethodName: "deleteCouponCampaign",
			Handler:    _SingleUseCoupons_DeleteCouponCampaign_Handler,
		},
		{
			MethodName: "getAnalytics",
			Handler:    _SingleUseCoupons_GetAnalytics_Handler,
		},
		{
			MethodName: "createCouponOffer",
			Handler:    _SingleUseCoupons_CreateCouponOffer_Handler,
		},
		{
			MethodName: "updateCouponOffer",
			Handler:    _SingleUseCoupons_UpdateCouponOffer_Handler,
		},
		{
			MethodName: "getCouponOffer",
			Handler:    _SingleUseCoupons_GetCouponOffer_Handler,
		},
		{
			MethodName: "deleteCouponOffer",
			Handler:    _SingleUseCoupons_DeleteCouponOffer_Handler,
		},
		{
			MethodName: "createCoupon",
			Handler:    _SingleUseCoupons_CreateCoupon_Handler,
		},
		{
			MethodName: "updateCoupon",
			Handler:    _SingleUseCoupons_UpdateCoupon_Handler,
		},
		{
			MethodName: "redeemCoupon",
			Handler:    _SingleUseCoupons_RedeemCoupon_Handler,
		},
		{
			MethodName: "updateCouponExternalId",
			Handler:    _SingleUseCoupons_UpdateCouponExternalId_Handler,
		},
		{
			MethodName: "getCouponById",
			Handler:    _SingleUseCoupons_GetCouponById_Handler,
		},
		{
			MethodName: "getCouponByExternalId",
			Handler:    _SingleUseCoupons_GetCouponByExternalId_Handler,
		},
		{
			MethodName: "voidCoupon",
			Handler:    _SingleUseCoupons_VoidCoupon_Handler,
		},
		{
			MethodName: "countCouponsByCouponCampaignDeprecated",
			Handler:    _SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_Handler,
		},
		{
			MethodName: "countCouponsByCouponCampaign",
			Handler:    _SingleUseCoupons_CountCouponsByCouponCampaign_Handler,
		},
		{
			MethodName: "patchPerson",
			Handler:    _SingleUseCoupons_PatchPerson_Handler,
		},
		{
			MethodName: "copyCouponCampaign",
			Handler:    _SingleUseCoupons_CopyCouponCampaign_Handler,
		},
		{
			MethodName: "getMetaKeysForCampaign",
			Handler:    _SingleUseCoupons_GetMetaKeysForCampaign_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "listCouponCampaignsDeprecated",
			Handler:       _SingleUseCoupons_ListCouponCampaignsDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponCampaigns",
			Handler:       _SingleUseCoupons_ListCouponCampaigns_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponOffersDeprecated",
			Handler:       _SingleUseCoupons_ListCouponOffersDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponOffers",
			Handler:       _SingleUseCoupons_ListCouponOffers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "streamCouponUpdates",
			Handler:       _SingleUseCoupons_StreamCouponUpdates_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "streamCouponRedemptions",
			Handler:       _SingleUseCoupons_StreamCouponRedemptions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "listCouponsByCouponCampaignDeprecated",
			Handler:       _SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponsByCouponCampaign",
			Handler:       _SingleUseCoupons_ListCouponsByCouponCampaign_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "io/single_use_coupons/a_rpc.proto",
}
